@{
}

<div class="d-flex flex-column align-items-center">
    <h1>Report Issues</h1>
    <br />

    <!--Wrapped the entire form content in a <form> tag with an ID for easier JavaScript access.-->
    <form id="reportForm" action="/Home/SubmitReport" method="post">
        <label for="inpLocation">Enter the Location of Issue</label> <br />
        <input id="inpLocation" type="text" placeholder="1 Mercantile Bank Plaza, Ring Road Port Elizabeth 6045" name="location" required />
       <br />
        <br />
        <label for="inpCategory">Select the Category of Issue</label> <br />
        <select id="selCategory" name="category" required>
            <optgroup label="- - Road - -"></optgroup>
            <option value="CheapConstruction">Pot Holes</option>
            <option value="RoadConstruction">Road Construction</option>
            <option value="IcyRoads">Icy Roads</option>
            <option value="Fog">Fog</option>
            <option value="FloodedRoads">Flooded Roads</option>
            <optgroup label="- - Road Signs - -"></optgroup>
            <option value="DelayedRobots">Delayed Robots</option>
            <option value="HumanError">Incorrect Information on Distance to Destination</option>
            <option value="Theft">Report Missing Resources</option>
            <optgroup label="- - Water - -"></optgroup>
            <option value="BurstPipe">Burst Pipe</option>
            <option value="Theft">Report Stolen Water Pipes</option>
            <optgroup label="- - Sanitation - -"></optgroup>
            <option value="BadWater">Unsafe Drinking Water</option>
            <option value="BurstSewer">Burst Sewerage Pipes</option>
        </select>
        <br />
        <br />

        <label for="tarDescription">Enter the Description of Issue</label><br />
        <textarea id="tarDescription" rows="5" cols="60" name="description" required></textarea>
        <br />
        <br />
        <div class="uploadbox">
            <div class="d-flex flex-column align-items-center">
                <br />
                <label for="inpAttachments">Attach ALL Supporting Documents (.pdf; .docx; .xlsx; .mp4; .mp3; etc)</label>
                <br />
                <input id="inpAttachments" type="file" name="attachments[]" multiple accept=".pdf,.docx,.xlsx,.mp4,.mp3" />
                <div class="d-flex justify-content-between">
                    <div class="progress-bar">
                        <div class="progress-bar-fill" style="width:0%;"></div>
                    </div>
                    <br />
                    <label id="progressText">0%</label>
                </div>
            </div>
        </div>
        <br />
        <label id="motivationalMessage"></label>
        <br />
        <br />
        <div class="d-flex justify-content-evenly align-items-center">
            <span>
                <a href="@Url.Action("Index", "Home")" class="mybtnReport">Return Home</a>
            </span>
            <span>
                <button id="btnSubmit" type="submit" class="mybtnReport">Submit</button>
            </span>
        </div>
    </form>
</div>

<script>

    const form = document.getElementById('reportForm');
    const locationInput = document.getElementById('inpLocation');
    const categorySelect = document.getElementById('selCategory');
    const descriptionTextarea = document.getElementById('tarDescription');
    const attachmentsInput = document.getElementById('inpAttachments');
    const motivationalMessageLabel = document.getElementById('motivationalMessage');
    const progressBarFill = document.querySelector('.progress-bar-fill');
    const progressText = document.getElementById('progressText');

    form.addEventListener('submit', handleSubmit);

    function handleSubmit (event) {
        event.preventDefault();

        const location = locationInput.value.trim();
        const category = categorySelect.value.trim();
        const description = descriptionTextarea.value.trim();
        const attachments = attachmentsInput.files;

        //checking to see if the inputs elements contain any user input
        if (location === '' || category === '' || description === '') {
            showErrorMessage('Please fill out all fields.');
            return;
        }

        submitFormData(location, category, description, attachments);
    }

    //function to be called on event, it stores locally then submits to the controller without having to reload the page
    function submitFormData (location, category, description, attachments) {
        const formData = new FormData();
        formData.append('location', location);
        formData.append('category', category);
        formData.append('description', description);

        for (let i = 0; i < attachments.length; i++) {
            formData.append('attachments', attachments[i]);
        }

        //getting and posting the data to the home controller method submit report which handles more complex backend code
        fetch('/Home/SubmitReport', {
            method: 'POST',
            body: formData,
            credentials: 'same-origin'
        })

        //configuring the feedback to user about submission status
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    motivationalMessageLabel.value = 'Successful Submission';
                    resetForm();
                } else {
                    motivationalMessageLabel.value = 'Error Submitting Report, Please Try Again';
                }
            })
            .catch(error => {
                console.error('Error:', error);
                motivationalMessageLabel.value('Error Submitting Report, Please Try Again')
            });
    }
</script>
